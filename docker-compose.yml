version: '2'

networks:
  cluster-net:
    driver: bridge

services:

  zookeeper1:
    #build: ./zookeeper/
    image: flinox/zookeeper_cluster
    user: "1000:1000"
    hostname: zookeeper1
    container_name: zookeeper1      
    networks:
      - cluster-net
    volumes:
      - ./zookeeper/data/zookeeper1:/data/zookeeper
      - ./zookeeper/log/zookeeper1:/opt/zookeeper/log
      - ./zookeeper/conf:/opt/zookeeper/conf
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ID: 1
  
  zookeeper2:
    #build: ./zookeeper/    
    image: flinox/zookeeper_cluster
    user: "1000:1000"
    hostname: zookeeper2
    container_name: zookeeper2
    networks:
      - cluster-net
    volumes:
      - ./zookeeper/data/zookeeper2:/data/zookeeper
      - ./zookeeper/log/zookeeper2:/opt/zookeeper/log
      - ./zookeeper/conf:/opt/zookeeper/conf      
    ports:
      - "2182:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ID: 2     
    depends_on:
      - zookeeper1

  zookeeper3:
    #build: ./zookeeper/    
    image: flinox/zookeeper_cluster
    user: "1000:1000"
    hostname: zookeeper3
    container_name: zookeeper3
    networks:
      - cluster-net
    volumes:
      - ./zookeeper/data/zookeeper3:/data/zookeeper
      - ./zookeeper/log/zookeeper3:/opt/zookeeper/log
      - ./zookeeper/conf:/opt/zookeeper/conf      
    ports:
      - "2183:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ID: 3      
    depends_on:
      - zookeeper1
      - zookeeper2      


  kafka1:
    #build: ./kafka/    
    image: flinox/kafka_cluster
    user: "1000:1000"    
    hostname: kafka1
    container_name: kafka1
    networks:
      - cluster-net
    volumes:
      - ./kafka/log/kafka1:/opt/kafka/logs
      - ./kafka/config/kafka1:/opt/kafka/config
    ports:
      - "9092:9092"
    environment:
      ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper1
      - zookeeper2

  kafka2:
    #build: ./kafka/        
    image: flinox/kafka_cluster
    user: "1000:1000"    
    hostname: kafka2
    container_name: kafka2
    networks:
      - cluster-net
    volumes:
      - ./kafka/log/kafka2:/opt/kafka/logs
      - ./kafka/config/kafka2:/opt/kafka/config
    ports:
      - "9093:9092"
    environment:
      ID: 2
      ALLOW_PLAINTEXT_LISTENER: "yes"   
    depends_on:
      - zookeeper1
      - zookeeper2
      - kafka1        

  kafka3:
    #build: ./kafka/        
    image: flinox/kafka_cluster
    user: "1000:1000"    
    hostname: kafka3
    container_name: kafka3
    networks:
      - cluster-net
    volumes:
      - ./kafka/log/kafka3:/opt/kafka/logs
      - ./kafka/config/kafka3:/opt/kafka/config
    ports:
      - "9094:9092"
    environment:
      ID: 3
      ALLOW_PLAINTEXT_LISTENER: "yes"
      # KAFKA_ADVERTISED_HOST_NAME: 172.20.1.38
      # LOG4J_LOGGER_KAFKA: "INFO"
      # LOG4J_LOGGER_ORG_APACHE_KAFKA: "INFO"
      # LOG4J_LOGGER_ORG_I0ITEC_ZKCLIENT_ZKCLIENT: "INFO"
      # LOG4J_LOGGER_ORG_APACHE_ZOOKEEPER: "INFO"
      # # Change to DEBUG or TRACE to enable request logging
      # LOG4J_LOGGER_KAFKA_REQUEST_LOGGER: "DEBUG, requestAppender"
      # LOG4J_ADDITIVITY_KAFKA_REQUEST_LOGGER: "true"
      # #LOG4J_LOGGER_KAFKA_NETWORK_PROCESSOR: "TRACE, requestAppender"
      # #LOG4J_LOGGER_KAFKA_SERVER_KAFKAAPIS: "TRACE, requestAppender"
      # #LOG4J_ADDITIVITY_KAFKA_SERVER_KAFKAAPIS: "false"
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      # KAFKA_NUM_IO_THREADS: 16 # 8
      # KAFKA_NUM_NETWORK_THREADS: 6 # 3
      # KAFKA_MAX_CONNECTIONS_PER_IP: 10 #
      # #KAFKA_MAX_CONNECTIONS_PER_IP_OVERRIDES: 172.22.0.1:500,127.0.0.1:200
      # KAFKA_NUM_PARTITIONS: 5
      # KAFKA_OFFSETS_RETENTION_MINUTES: 2880
      # KAFKA_LOG_RETENTION_HOURS: 48
      # #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # #KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      # #KAFKA_MIN_INSYNC_REPLICAS: 1
      # #LOG_RETENTION_MINUTES: 5
      # #LOG_CLEANUP_POLICY: "compact"
      # #LOG_CLEANER_THREADS: 2
      # #KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact"
      # #HOSTNAME_COMMAND: "wget -t3 -T2 -qO-  http://169.254.169.254/latest/meta-data/local-ipv4"
      # #Reference: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3     
      - kafka1
      - kafka2             

  kafka_client:
    image: flinox/flinox:v2
    hostname: kafka_client
    container_name: kafka_client  
    networks:
      - cluster-net
    stdin_open: true
    tty: true
    # environment:
    #   TERM: "xterm"
    command: /bin/bash -c "sleep infinity"
    depends_on:
      - kafka3


