version: '2'
services:

  zookeeper1:
    image: flinox/zookeeper_cluster
    hostname: zookeeper1
    container_name: zookeeper1      
    volumes:
      - /data/zookeeper1:/data/zookeeper
      - /log/zookeeper1:/opt/zookeeper/log
      - /conf/zoo.cfg:/opt/zookeeper/conf/zoo.cfg      
    ports:
      - "2181:2181"
    environment:
      ID: 1

  zookeeper2:
    image: flinox/zookeeper_cluster
    hostname: zookeeper2
    container_name: zookeeper2
    volumes:
      - /data/zookeeper2:/data/zookeeper
      - /log/zookeeper2:/opt/zookeeper/log
      - /conf/zoo.cfg:/opt/zookeeper/conf/zoo.cfg      
    ports:
      - "2181:2181"
    environment:
      ID: 2
      
  zookeeper3:
    image: flinox/zookeeper_cluster
    hostname: zookeeper3
    container_name: zookeeper3    
    volumes:
      - /data/zookeeper3:/data/zookeeper
      - /log/zookeeper3:/opt/zookeeper/log
      - /conf/zoo.cfg:/opt/zookeeper/conf/zoo.cfg
    ports:
      - "2181:2181"
    environment:
      ID: 3

  # kafka:
  #   build: .
  #   ports:
  #     - "9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 172.20.1.38
  #     LOG4J_LOGGER_KAFKA: "INFO"
  #     LOG4J_LOGGER_ORG_APACHE_KAFKA: "INFO"
  #     LOG4J_LOGGER_ORG_I0ITEC_ZKCLIENT_ZKCLIENT: "INFO"
  #     LOG4J_LOGGER_ORG_APACHE_ZOOKEEPER: "INFO"
  #     # Change to DEBUG or TRACE to enable request logging
  #     LOG4J_LOGGER_KAFKA_REQUEST_LOGGER: "DEBUG, requestAppender"
  #     LOG4J_ADDITIVITY_KAFKA_REQUEST_LOGGER: "true"
  #     #LOG4J_LOGGER_KAFKA_NETWORK_PROCESSOR: "TRACE, requestAppender"
  #     #LOG4J_LOGGER_KAFKA_SERVER_KAFKAAPIS: "TRACE, requestAppender"
  #     #LOG4J_ADDITIVITY_KAFKA_SERVER_KAFKAAPIS: "false"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
  #     KAFKA_NUM_IO_THREADS: 16 # 8
  #     KAFKA_NUM_NETWORK_THREADS: 6 # 3
  #     KAFKA_MAX_CONNECTIONS_PER_IP: 10 #
  #     #KAFKA_MAX_CONNECTIONS_PER_IP_OVERRIDES: 172.22.0.1:500,127.0.0.1:200
  #     KAFKA_NUM_PARTITIONS: 5
  #     KAFKA_OFFSETS_RETENTION_MINUTES: 2880
  #     KAFKA_LOG_RETENTION_HOURS: 48
  #     #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     #KAFKA_DEFAULT_REPLICATION_FACTOR: 1
  #     #KAFKA_MIN_INSYNC_REPLICAS: 1
  #     #LOG_RETENTION_MINUTES: 5
  #     #LOG_CLEANUP_POLICY: "compact"
  #     #LOG_CLEANER_THREADS: 2
  #     #KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact"
  #     #HOSTNAME_COMMAND: "wget -t3 -T2 -qO-  http://169.254.169.254/latest/meta-data/local-ipv4"
  #     #Reference: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  # command: >
  #          /bin/sh -c "wget http://ftp.unicamp.br/pub/apache/kafka/2.2.0/kafka_2.12-2.2.0.tgz"

  # kafka_client:
  #   image: flinox/flinox:v2
  #   hostname: kafka_client
  #   container_name: kafka_client  
  #   stdin_open: true
  #   tty: true
  #   # environment:
  #   #   TERM: "xterm"
  #   command: /bin/bash -c "sleep infinity"


